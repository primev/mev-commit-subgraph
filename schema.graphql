# High level entity that tracks metrics for the MEV Commit network
type MevCommitValidators @entity {
  id: ID!
  # Total number of validators that have opted in to MEV Commit
  # Includes both staked and restaked validators
  totalOptedIn: BigInt!
  # The total amount of ETH that has been staked
  totalStaked: BigInt!
  # The total amount of ETH that has been restaked
  totalRestaked: BigInt!

  # The total amount of ETH that has been staked & restaked on the MEV Commit network
  totalSecurity: BigInt!
  # The validators that have opted in to MEV Commit
  validators: [Validator!]! @derivedFrom(field: "mevCommitValidator")
}

# Represents a validator that has opted in to MEV Commit
type Validator @entity {
  id: ID!
  # The validator's BLS key
  validatorBLSKey: String!
  # The block timestamp at which the validator was created
  created: BigInt!
  # The MEV Commit validators entity that the validator belongs to
  mevCommitValidator: MevCommitValidators! @relation
}

type Staker @entity {
  # the validator's BLS key
  id: ID!
  validatorBLSKey: String!
  created: BigInt!
  status: StakerStatus!
  stakedAmount: BigInt!
  # the block number at which the staker was created
  stakedAt: BigInt!
}

enum StakerStatus {
  Staked
  Unstaked
  Withdrawn
  # Paused
}

type Restaker @entity {
  id: ID!
  validatorBLSKey: String!
  created: BigInt!
  status: RestakerStatus!
  restakedAmount: BigInt!
  restakedAt: BigInt!
  eigenPod: EigenPod @relation(fields: ["id"], references: ["id"]) # Updated relation
}

enum RestakerStatus {
  Registered
  DeregistrationRequested
  Deregistered
}

type Operator @entity {
  id: ID!
  operatorAddress: Bytes!
  created: BigInt!
  status: OperatorStatus!
  delegatedPods: [EigenPod!] @derivedFrom(field: "operator")
}

enum OperatorStatus {
  Registered
  DeregistrationRequested
  Deregistered
}

type EigenPod @entity {
  # The pod contract's address
  id: ID!
  podOwner: Bytes!
  podContractAddress: Bytes!
  operator: Operator @relation(nullable: true)
  restakers: [Restaker!] @derivedFrom(field: "eigenPod")
}
